<%
/**
 *  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 *
 */

(function () {
    var log = new Log();
    var GADGET_STORE_PATH = '/store/carbon.super/es/gadget';
    var i18n = require('i18n');
    var assets = require('/modules/assets.js');
    var constants = require('/modules/constants.js');
    var utils = require('/modules/utils.js');
    var storeType = request.getParameter("storeType");
    var method = request.getMethod();
    var matcher = new URIMatcher(request.getRequestURI());
    i18n.init(request, utils.getLocaleResourcePath());

    if (!user) {
        response.sendError(401, i18n.localize("request.not.authorized"));
        return;
    }
    if (matcher.match('/gadgets')) {
        if (method === 'POST') {
            var results = assets.addAsset(constants.GADGET_TYPE, request.getParameter('id') + '$' + request.getParameter('version'), request.getFile("selected-file"), storeType);
            if (storeType === constants.FILE_STORE) {
                var urlPrefix = utils.relativePrefix(originalURI);
                response.sendRedirect((utils.tenantedPrefix(urlPrefix, user.domain)) + 'upload-gadget?message=' + results);
                return;
            } else if (storeType === constants.ES_STORE) {
                if (results !== "success") {
                    response.sendError(400, i18n.localize("something.wrong"));
                    return;
                }
                else {
                    return true;
                }
            }
        }
    }
    if (matcher.match('/gadgets/{id}/{version}')) {
        var id = matcher.elements().id;
        var version = matcher.elements().version;
        if (method === 'PUT') {
            // Update the gadget
            saveGadget(id + '$' + version);
        }
        if (method === 'DELETE') {
            // Delete the gadget
            deleteGadget(id + '$' + version);
        }
    } else {
        response.sendError(401, i18n.localize("request.not.authorized"));
    }
})();
%>