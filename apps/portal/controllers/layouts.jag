<%
/**
 * Copyright 2016 WSO2, Inc. (http://wso2.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * This is the controller for layouts main page.
 */

(function () {
    var utils = require('/modules/utils.js');
    var method = request.getMethod();
    var tempLayoutPath = '/store/' + userDomain + '/fs/temp-layout/';
    var ZipFile = Packages.java.util.zip.ZipFile;
    var process = require('process');
    var zipFile = process.getProperty('carbon.home') + '/repository/deployment/server/jaggeryapps/portal' + tempLayoutPath;
    var layoutPath = '/store/' + userDomain + '/fs/layout/';
    var configurationFileName = "layout.json";

    if (!user) {
        sendLogin();
        return;
    }

    if (userDomain !== (urlDomain || superDomain)) {
        response.sendRedirect(utils.tenantedPrefix(urlPrefix, userDomain));
        return;
    }

    if (method === "GET") {
        include(utils.resolvePath("templates/layouts.jag"));
    } else if (method === "POST") {
        // Before checking the required conditions, in order to avoid zip file being deployed
        // Remove the .zip extension
        var fileRequest = request.getFile("selected-file");
        var fileName = fileRequest.getName().replace(".zip", "");
        var tempDirectory = new File(tempLayoutPath);

        if (!tempDirectory.isExists()) {
            tempDirectory.mkdir();
        }

        var gadget = new File(tempLayoutPath + fileName);
        gadget.open('w');
        gadget.write(fileRequest.getStream());
        gadget.close();

        try {
            // Extract the zip file and check whether there is a layout.json file
            var zip = new ZipFile(zipFile + fileName);
            var fileInZip = zip.entries();

            for (var entries = fileInZip; entries.hasMoreElements();) {
                var entry = entries.nextElement();
                if (String(entry.getName().toLowerCase()) === configurationFileName) {
                    var layoutDirectory = new File(layoutPath);
                    var files = layoutDirectory.listFiles();

                    // Check whether is there is another gadget with same id
                    for (var index = 0; index < files.length; index++) {
                        if (files[index].getName() === fileName) {
                            tempDirectory.del();
                            response.sendRedirect(tenantedUrlPrefix + 'upload-layout?message=idAlreadyExists');
                            return;
                        }
                    }
                    // If there is a layout.json and no other layouts with same id, deploy the layout
                    var layoutDir = new File(layoutPath + fileRequest.getName());
                    layoutDir.open('w');
                    layoutDir.write(fileRequest.getStream());
                    layoutDir.close();
                    tempDirectory.del();
                    response.sendRedirect(tenantedUrlPrefix + 'upload-layout?message=success');
                    return;
                }
            }
            // If the layout.json is not inside the zip file, indicate the error
            tempDirectory.del();
            response.sendRedirect(tenantedUrlPrefix + 'upload-layout?message=confgurationFileMissing');
            return;

        } catch (e) {
            log.error('Error occurred while extracting the zip file.', e);
        }
    }
}()); %>